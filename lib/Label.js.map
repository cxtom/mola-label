{"version":3,"sources":["Label.js"],"names":["Label","render","props","className","style","top","left","width","height","labelType","imageUrl","text","fontSize","color","lineHeight","textAlign","displayName","propTypes","oneOfType","number","string","isRequired","oneOf","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;QAeaA,K,WAAAA,K;;;;;;;;wBAETC,M,qBAAS;AAAA,yBAgBD,KAAKC,KAhBJ;AAAA,0CAGDC,SAHC;AAAA,gBAGDA,SAHC,oCAGW,IAHX;AAAA,sCAIDC,KAJC;AAAA,gBAIDA,KAJC,gCAIO,IAJP;AAAA,gBAKDC,GALC,UAKDA,GALC;AAAA,gBAMDC,IANC,UAMDA,IANC;AAAA,gBAODC,KAPC,UAODA,KAPC;AAAA,gBAQDC,MARC,UAQDA,MARC;AAAA,gBASDC,SATC,UASDA,SATC;AAAA,gBAUDC,QAVC,UAUDA,QAVC;AAAA,gBAWDC,IAXC,UAWDA,IAXC;AAAA,gBAYDC,QAZC,UAYDA,QAZC;AAAA,gBAaDC,KAbC,UAaDA,KAbC;AAAA,gBAcDC,UAdC,UAcDA,UAdC;AAAA,gBAeDC,SAfC,UAeDA,SAfC;;;AAkBL,mBACI;AAAA;AAAA;AACI,+BAAW,6BAAG,YAAH,EAAiBZ,SAAjB,CADf;AAEI,uDACOC,KADP;AAEIC,6BAAK,kBAAOA,GAAP,CAFT;AAGIC,8BAAM,kBAAOA,IAAP,CAHV;AAIIC,+BAAO,kBAAOA,KAAP,CAJX;AAKIC,gCAAQ,kBAAOA,MAAP;AALZ,sBAFJ;AASKC,8BAAc,OAAd,GACK,0CAAK,KAAKC,QAAV,GADL,GAEK;AAAA;AAAA,sBAAG,OAAO;AACRE,sCAAU,kBAAOA,QAAP,CADF;AAERC,wCAFQ;AAGRE,gDAHQ;AAIRD,wCAAeA,aAAaF,QAA5B;AAJQ,yBAAV;AAKED;AALF;AAXV,aADJ;AAoBH,S;;;;;AAILX,UAAMgB,WAAN;;AAEAhB,UAAMiB,SAAN,GAAkB;AACdZ,aAAK,iBAAUa,SAAV,CAAoB,CAAC,iBAAUC,MAAX,EAAmB,iBAAUC,MAA7B,CAApB,EAA0DC,UADjD;AAEdf,cAAM,iBAAUY,SAAV,CAAoB,CAAC,iBAAUC,MAAX,EAAmB,iBAAUC,MAA7B,CAApB,EAA0DC,UAFlD;AAGdd,eAAO,iBAAUW,SAAV,CAAoB,CAAC,iBAAUC,MAAX,EAAmB,iBAAUC,MAA7B,CAApB,EAA0DC,UAHnD;AAIdb,gBAAQ,iBAAUU,SAAV,CAAoB,CAAC,iBAAUC,MAAX,EAAmB,iBAAUC,MAA7B,CAApB,EAA0DC,UAJpD;AAKdZ,mBAAW,iBAAUa,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,EAAmCD,UALhC;AAMdX,kBAAU,iBAAUU,MANN;AAOdT,cAAM,iBAAUS,MAPF;AAQdR,kBAAU,iBAAUM,SAAV,CAAoB,CAAC,iBAAUC,MAAX,EAAmB,iBAAUC,MAA7B,CAApB,CARI;AASdP,eAAO,iBAAUO,MATH;AAUdN,oBAAY,iBAAUI,SAAV,CAAoB,CAAC,iBAAUC,MAAX,EAAmB,iBAAUC,MAA7B,CAApB,CAVE;AAWdL,mBAAW,iBAAUO,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,CAAhB;AAXG,KAAlB;;AAcAtB,UAAMuB,YAAN,GAAqB;AACjBlB,aAAK,GADY;AAEjBC,cAAM,GAFW;AAGjBC,eAAO,IAHU;AAIjBC,gBAAQ,IAJS;AAKjBC,mBAAW,MALM;AAMjBG,kBAAU,IANO;AAOjBC,eAAO,MAPU;AAQjBC,oBAAY,IARK;AASjBC,mBAAW;AATM,KAArB;;yBAYe,gEAA+Bf,KAA/B,C","file":"Label.js","sourcesContent":["/**\n * @file 静态标签组件\n * @author cxtom <cxtom2008@gmail.com>\n */\n\nimport React, {Component, PropTypes} from 'react';\n\nimport {\n    registerComponent,\n    px2rem\n} from 'mola';\n\nimport cx from 'classnames';\nimport {type, level} from './constants';\n\nexport class Label extends Component {\n\n    render() {\n\n        let {\n            className = null,\n            style = null,\n            top,\n            left,\n            width,\n            height,\n            labelType,\n            imageUrl,\n            text,\n            fontSize,\n            color,\n            lineHeight,\n            textAlign\n        } = this.props;\n\n        return (\n            <div\n                className={cx('mola-label', className)}\n                style={{\n                    ...style,\n                    top: px2rem(top),\n                    left: px2rem(left),\n                    width: px2rem(width),\n                    height: px2rem(height)\n                }}>\n                {labelType === 'image'\n                    ? <img src={imageUrl} />\n                    : <p style={{\n                        fontSize: px2rem(fontSize),\n                        color,\n                        textAlign,\n                        lineHeight: `${lineHeight / fontSize}em`\n                    }}>{text}</p>}\n            </div>\n        );\n    }\n\n}\n\nLabel.displayName = type;\n\nLabel.propTypes = {\n    top: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n    left: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n    labelType: PropTypes.oneOf(['text', 'image']).isRequired,\n    imageUrl: PropTypes.string,\n    text: PropTypes.string,\n    fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    color: PropTypes.string,\n    lineHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    textAlign: PropTypes.oneOf(['left', 'right', 'center'])\n};\n\nLabel.defaultProps = {\n    top: '0',\n    left: '0',\n    width: '50',\n    height: '14',\n    labelType: 'text',\n    fontSize: '14',\n    color: '#000',\n    lineHeight: '14',\n    textAlign: 'left'\n};\n\nexport default registerComponent(type, level)(Label);\n"]}